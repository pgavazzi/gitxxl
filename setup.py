import os
from distutils import log
from distutils.core import setup, Command, Extension
from distutils.dist import Distribution
from distutils.command.build import build
from distutils.command.build_ext import build_ext
from distutils.command.build_py import build_py
from distutils.command.install_lib import install_lib
from distutils.command.install_scripts import install_scripts
from distutils.spawn import spawn, find_executable
from distutils import cygwinccompiler, file_util
from distutils.errors import CCompilerError, DistutilsExecError
from distutils.sysconfig import get_python_inc, get_config_var
from distutils.version import StrictVersion

class xxldist(Distribution):
    pure = 0

    global_options = Distribution.global_options + \
                     [('pure', None, "use pure (slow) Python "
                        "code instead of C extensions"),
                      ('c2to3', None, "(experimental!) convert "
                        "code with 2to3"),
                     ]

    def has_ext_modules(self):
        # self.ext_modules is emptied in hgbuildpy.finalize_options which is
        # too late for some cases
        return not self.pure and Distribution.has_ext_modules(self)

scripts = ['gitxxl']

version = ''

if os.path.isdir('.git'):
  pass

if version:
    f = open("extralarge/__version__.py", "w")
    f.write('# this file is autogenerated by setup.py\n')
    f.write('version = "%s"\n' % version)
    f.close()

try:
    from src import __version__
    version = __version__.version
except ImportError:
    version = 'unknown'

cmdclass = {}

packages = ['extralarge']

pymodules = []

common_depends = []

extmodules = []

packagedata = {'gitxxl': []}

datafiles = [('dist/hooks', ['dist/hooks/post-commit', 'dist/hooks/pre-commit'])]

setupversion = version

extra = {}

setup(name='gitxxl',
      version=setupversion,
      author='Paolo Gavazzi and many others',
      author_email='pgavazzi@softcactus.com',
      url='http://gitxxl.com/',
      download_url='http://gitxxl.com/release/',
      description=('git extension for XXL binary files'),
      long_description=('GitXXL is a git extension written in Python.'
                        ' It is used by a number of large projects that require'
                        ' fast, reliable large file handling as part of'
                        ' their distributed revision control.'),
      license='GNU GPLv2 or any later version',
      classifiers=[
          'Development Status :: 1 - Planning',
          'Environment :: Console',
          'Intended Audience :: Developers',
          'Intended Audience :: System Administrators',
          'License :: OSI Approved :: GNU General Public License (GPL)',
          'Natural Language :: English',
          'Operating System :: Microsoft :: Windows',
          'Operating System :: OS Independent',
          'Operating System :: POSIX',
          'Programming Language :: Python',
          'Topic :: Software Development :: Version Control',
      ],
      scripts=scripts,
      packages=packages,
      py_modules=pymodules,
      ext_modules=extmodules,
      data_files=datafiles,
      package_data=packagedata,
      cmdclass=cmdclass,
      distclass=xxldist,
      options={'py2exe': {'packages': []},
               'bdist_mpkg': {'zipdist': False,
                              'license': 'COPYING',
                              'readme': 'contrib/macosx/Readme.html',
                              'welcome': 'contrib/macosx/Welcome.html',
                              },
               },
      **extra)